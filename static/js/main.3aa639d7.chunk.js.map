{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendsList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","images/default.jpg","components/FriendList/FriendList.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Friends","friends","className","styles","container","friend_list","map","avatar","name","isOnline","id","item","online","offline","src","alt","width","defaultProps","defaultImage","Profile","tag","location","stats","followers","views","likes","profile","description","stats__item","label","quantity","Statistics","title","userStats","itemQuantity","String","length","itemWidth","statistics","stat_list","percentage","style","backgroundColor","Math","random","toString","slice","TransactionHistory","items","transaction_history","type","amount","currency","App","user","FriendList","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3aa639d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__e6mvA\",\"profile\":\"Profile_profile__1OUje\",\"description\":\"Profile_description__1AOaT\",\"avatar\":\"Profile_avatar__HrQwg\",\"name\":\"Profile_name__rC19E\",\"tag\":\"Profile_tag__11cyM\",\"location\":\"Profile_location__3aadh\",\"stats\":\"Profile_stats__1chxK\",\"stats__item\":\"Profile_stats__item__3iRAz\",\"quantity\":\"Profile_quantity__uR6s5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendsList_container__2-UVY\",\"friend_list\":\"FriendsList_friend_list__14kBj\",\"item\":\"FriendsList_item__3V0Rq\",\"name\":\"FriendsList_name__3CrIo\",\"avatar\":\"FriendsList_avatar__29nxu\",\"online\":\"FriendsList_online__4UIQX\",\"offline\":\"FriendsList_offline__l7A2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__1xYi9\",\"statistics\":\"Statistics_statistics__SS5R4\",\"item\":\"Statistics_item__2jT6T\",\"stat_list\":\"Statistics_stat_list__1sizg\",\"label\":\"Statistics_label__FRwYY\",\"percentage\":\"Statistics_percentage__3DZUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TransactionHistory_container__1zjWV\",\"transaction_history\":\"TransactionHistory_transaction_history__2iBKs\"};","export default __webpack_public_path__ + \"static/media/default.43901eb7.jpg\";","import PropTypes from 'prop-types';\nimport defaultImage from '../../images/default.jpg';\nimport styles from './FriendsList.module.css';\n\nconst Friends = ({ friends }) => (\n  <div className={styles.container}>\n    <ul className={styles.friend_list}>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <li key={id} className={styles.item}>\n          {isOnline && <span className={styles.online}>.....</span>}\n          {!isOnline && <span className={styles.offline}>.....</span>}\n          <img\n            className={styles.avatar}\n            src={avatar}\n            alt={'Image of' + { name }}\n            width=\"48\"\n          />\n          <p className={styles.name}>{name}</p>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nFriends.defaultProps = {\n  avatar: defaultImage,\n};\n\nFriends.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Friends;\n","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\nimport defaultImage from '../../images/default.jpg';\n\nconst Profile = ({\n  name,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) => (\n  <div className={styles.container}>\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.stats__item}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{followers}</span>\n        </li>\n        <li className={styles.stats__item}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{views}</span>\n        </li>\n        <li className={styles.stats__item}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nProfile.defaultProps = {\n  avatar: defaultImage,\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ title, userStats }) => {\n  const itemQuantity = String(100 / userStats.length);\n  const itemWidth = `${itemQuantity}%`;\n  const randomColor = () => {\n    let n = (Math.random() * 0x999999 * 1000000).toString(16);\n    return '#' + n.slice(0, 6);\n  };\n\n  return (\n    <div className={styles.container}>\n      <section className={styles.statistics}>\n        {title && <h2 className={styles.title}>{title}</h2>}\n        <ul className={styles.stat_list}>\n          {userStats.map(({ id, label, percentage }) => (\n            <li\n              className={styles.item}\n              key={id}\n              style={{\n                width: itemWidth,\n                backgroundColor: randomColor(),\n              }}\n            >\n              <span className={styles.label}>{label}</span>\n              <span className={styles.percentage}>{percentage}</span>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  userStats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n\n  title: PropTypes.string,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <div className={styles.container}>\n    <table className={styles.transaction_history}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import './App.css';\nimport FriendList from './components/FriendList/FriendList.js';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\nimport user from './data/user.json';\nimport userStats from './data/statistical-data.json';\nimport './styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" userStats={userStats} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}